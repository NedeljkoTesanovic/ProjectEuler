//Given a 1000 digit number, find the greatest product of 13 adjacent digits
#include <iostream>
#include <cstring>

using namespace std;

int main()
{
    string num = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450";
    //string num = "2222221011333333333330002222222222222";
    unsigned long long res = 0;
    short br = 0;
    int a = 0, b = 0; //index
    unsigned long long p = 1;
    for(int i = 0; i < num.length(); i++)
    {
        char curr = num[i];
        if (num[i] == '0')
        {
            p = 1;
            if(br == 12)
            {
                while(br>=0)
                    p*=(num[i - (br--) - 1]-'0');
                    br = 0;
                if(p > res)
                {
                    res = p;
                    a = i - 12 -1;
                    b = i - 1;
                }
            }
            br = 0;
        } else if(br == 12)
        {
            if(num[i]>=num[i-12])
            {
                continue;
            }
            else
            {
                if (p != 1)
                {
                    p/=(num[i - 12]-'0');
                    p*=(num[i] - '0');
                }
                else
                {
                    while(br>0)
                        p*=(num[i - br--]-'0');
                    br = 12;
                }
                if(p > res)
                {
                    a = i - 12 -1;
                    b = i - 1;
                    res = p;
                }
            }
        }
        else
            br++;
    }
    cout << res <<endl;
    cout << a <<endl;
    cout << b << endl;
    return 0;
}
